package dev.flsrg.bot.uitls

import dev.flsrg.bot.roleplay.LanguageDetector

sealed class Strings(
    private val ru: String,
    private val en: String,
) {
    fun get(lang: LanguageDetector.Language, vararg args: Any): String = when (lang) {
        LanguageDetector.Language.EN -> en.format(*args)
        LanguageDetector.Language.RU -> ru.format(*args)
    }

    data object StartMessage : Strings("–ì–æ", "Let's go")
    data object ThinkingMessage : Strings("–î—É–º–∞—é...", "Thinking...")
    data object ThinkingCompletedMessage : Strings("–ü–æ–¥—É–º–∞–ª, –ø–æ–ª—É—á–∞–µ—Ç—Å—è:", "Thought and it's:")
    data object ResponseMessage : Strings("–¢–∞–∫, –Ω—É —Å–º–æ—Ç—Ä–∏", "So, well, look")
    data object RateLimitMessage : Strings("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏ –ø–æ–∫–∞", "Rate limit exceeded. Wait")
    data object KeyboardStopText : Strings("üö´ –û—Å—Ç–∞–Ω–æ–≤–∏—Å—å", "üö´ Stop it")
    data object KeyboardClearHistoryText : Strings("üßπ –ó–∞–±—É–¥—å –≤—Å–µ", "üßπ Forgot all")

    data object CallbackStopSuccessAnswer : Strings("–û—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è!", "Stopped!")
    data object CallbackStopNothingRunningAnswer : Strings("–ù–µ—á–µ–≥–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å", "Nothing to stop")
    data object CallbackClearHistorySuccessAnswer : Strings("–ß–∏—Å—Ç–æ!", "History cleared!")
    data object CallbackClearHistorySuccessMessage : Strings("–ë–æ—Ç –∑–∞–±—ã–ª –∏—Å—Ç–æ—Ä–∏—é. –î–∞–≤–∞–π –ø–æ –Ω–æ–≤–æ–π", "Bot forgot the history. Let's start over")

    data object StopErrorUser : Strings("–°—Ç–æ—é", "I'm stopped")
    data object StopErrorNewMessage : Strings("–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ, —Ç–∞–∫, —â–∞...", "There is a new message in the chat, so...")
}